Wir haben uns für das Framework Flask entschieden, um die Website zu implementieren, da man mit sqlalchemy(von flask), vereinfacht mit Datenbanken und Queries arbeiten kann. Wir haben eine index.html Datei erstellt, die über Python, wenn sie gerendet wird, ein Argument "data" bekommt. Data ist ein Tupel, an der ersten Stelle stehen immer die Daten von der DB, die von der Query gebildet worden. Alle weiteren Argumente sind die Namen der Schemas um die Columns der Tabelle zu bennen. In index.html, konnten wir durch Jinja Python Code in html Datei verwenden. Dadurch gehen wir die "data" durch und erstellen dementsprechend eine Tabelle mit den Werten. Durch Jinja war es dann keine Schwierigkeit die index.html Seite so flexible zu machen, dass die verschiedensten Queries passed werden konnten. Unter jeder Column Überschrift steht ein Button mit Filter ascending oder descending. Wenn man ein davon drückt, wird eine "POST" request an das backend gesendet, und anhand dieser Information, wird eine neue Query erstellt, aber diesmal wird die dementsprechende Column Überschrift sortiert. Wir haben uns für die Queries entschieden die Table zu erstellen, wo alle Tables gejoined sind. Nur Author, Article, Journal, Artikel die von diesem Journal gepublished worden sind, nach Artikel suchen die in, die in demjenigen Jahr geschrieben worden sind, nach Artikel Namen suchen, nach Journal Name suchen, und nach Journals Rank zwischen 2 Werten. 
